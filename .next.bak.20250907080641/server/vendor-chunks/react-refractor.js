"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-refractor";
exports.ids = ["vendor-chunks/react-refractor"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-refractor/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/react-refractor/dist/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Refractor: () => (/* binding */ Refractor),\n/* harmony export */   hasLanguage: () => (/* binding */ hasLanguage),\n/* harmony export */   registerLanguage: () => (/* binding */ registerLanguage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var refractor_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! refractor/core */ \"(ssr)/./node_modules/refractor/lib/core.js\");\n/* harmony import */ var unist_util_filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! unist-util-filter */ \"(ssr)/./node_modules/unist-util-filter/lib/index.js\");\n/* harmony import */ var unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! unist-util-visit-parents */ \"(ssr)/./node_modules/unist-util-visit-parents/lib/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\n\n\n\nvar __defProp$2 = Object.defineProperty, __defProps$2 = Object.defineProperties, __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors, __getOwnPropSymbols$2 = Object.getOwnPropertySymbols, __hasOwnProp$2 = Object.prototype.hasOwnProperty, __propIsEnum$2 = Object.prototype.propertyIsEnumerable, __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$2.call(b, prop) && __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b))\n      __propIsEnum$2.call(b, prop) && __defNormalProp$2(a, prop, b[prop]);\n  return a;\n}, __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));\nfunction addMarkers(ast, options) {\n  const markers = options.markers.map((marker) => typeof marker == \"number\" ? { line: marker } : marker).sort((nodeA, nodeB) => nodeA.line - nodeB.line), numbered = lineNumberify(ast.children).nodes;\n  return markers.length === 0 || numbered.length === 0 ? __spreadProps$2(__spreadValues$2({}, ast), { children: numbered }) : wrapLines(numbered, markers, options);\n}\nfunction lineNumberify(ast, context = { lineNumber: 1 }) {\n  const resultNodes = [];\n  return ast.reduce(\n    (result, node) => {\n      if (node.type === \"doctype\")\n        return result;\n      const lineStart = context.lineNumber;\n      if (node.type === \"text\") {\n        if (node.value.indexOf(`\n`) === -1)\n          return setLineInfo(node, lineStart, lineStart), result.nodes.push(node), result;\n        const lines = node.value.split(`\n`);\n        for (let i = 0; i < lines.length; i++) {\n          const lineNum = i === 0 ? context.lineNumber : ++context.lineNumber, text = {\n            type: \"text\",\n            value: i === lines.length - 1 ? lines[i] : `${lines[i]}\n`\n          }, withLineInfo = setLineInfo(text, lineNum, lineNum);\n          result.nodes.push(withLineInfo);\n        }\n        return result.lineNumber = context.lineNumber, result;\n      }\n      if (node.type === \"element\" && node.children) {\n        const processed = lineNumberify(node.children, context), firstChild = processed.nodes.find(isElementOrText), lastChild = processed.nodes.findLast(isElementOrText);\n        return setLineInfo(\n          node,\n          firstChild ? getLineStart(firstChild, lineStart) : lineStart,\n          lastChild ? getLineEnd(lastChild, lineStart) : lineStart\n        ), node.children = processed.nodes, result.lineNumber = processed.lineNumber, result.nodes.push(node), result;\n      }\n      return result.nodes.push(node), result;\n    },\n    { nodes: resultNodes, lineNumber: context.lineNumber }\n  );\n}\nfunction isElementOrText(node) {\n  return node.type === \"element\" || node.type === \"text\";\n}\nfunction getLineStart(node, fallbackLineStart = 1) {\n  return node.data && typeof node.data.lineStart == \"number\" ? node.data.lineStart : fallbackLineStart;\n}\nfunction getLineEnd(node, fallbackLineEnd = 1) {\n  return node.data && typeof node.data.lineEnd == \"number\" ? node.data.lineEnd : fallbackLineEnd;\n}\nfunction setLineInfo(node, lineStart, lineEnd) {\n  return node.data || (node.data = {}), node.data.lineStart = lineStart, node.data.lineEnd = lineEnd, node;\n}\nfunction unwrapLine(markerLine, nodes) {\n  const tree = { type: \"root\", children: nodes }, headMap = /* @__PURE__ */ new WeakMap(), lineMap = /* @__PURE__ */ new WeakMap(), tailMap = /* @__PURE__ */ new WeakMap(), cloned = [];\n  function addCopy(map, node, ancestors) {\n    cloned.push(node), ancestors.forEach((ancestor) => {\n      map.has(ancestor) || (map.set(ancestor, Object.assign({}, ancestor, { children: [] })), ancestor !== tree && cloned.push(ancestor));\n    });\n    let i = ancestors.length;\n    for (; i--; ) {\n      const ancestor = map.get(ancestors[i]);\n      if (!ancestor || !(\"children\" in ancestor))\n        continue;\n      const child = ancestors[i + 1], leaf = map.get(child) || node;\n      ancestor.children.indexOf(leaf) === -1 && ancestor.children.push(leaf);\n    }\n  }\n  (0,unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_2__.visitParents)(tree, (node, ancestors) => {\n    if (!(\"children\" in node || !isElementOrText(node))) {\n      if (getLineStart(node) < markerLine) {\n        addCopy(headMap, node, ancestors);\n        return;\n      }\n      if (getLineStart(node) === markerLine) {\n        addCopy(lineMap, node, ancestors);\n        return;\n      }\n      getLineEnd(node) > markerLine && cloned.some((clone) => ancestors.includes(clone)) && addCopy(tailMap, node, ancestors);\n    }\n  });\n  const filtered = (0,unist_util_filter__WEBPACK_IMPORTED_MODULE_3__.filter)(tree, (node) => cloned.indexOf(node) === -1), getChildren = (map) => {\n    const rootNode = map.get(tree);\n    return rootNode ? ((0,unist_util_visit_parents__WEBPACK_IMPORTED_MODULE_2__.visitParents)(rootNode, (leaf, ancestors) => {\n      if (isElementOrText(leaf) && \"children\" in leaf) {\n        setLineInfo(leaf, 0, 0);\n        return;\n      }\n      ancestors.forEach((ancestor) => {\n        setLineInfo(\n          ancestor,\n          Math.max(getLineStart(ancestor), getLineStart(leaf)),\n          Math.max(getLineEnd(ancestor), getLineEnd(leaf))\n        );\n      });\n    }), rootNode.children) : [];\n  };\n  return [\n    ...getChildren(headMap),\n    ...getChildren(lineMap),\n    ...getChildren(tailMap),\n    ...filtered ? filtered.children : []\n  ];\n}\nfunction wrapBatch(children, marker, options) {\n  const className = marker.className || \"refractor-marker\", baseData = {\n    lineStart: marker.line,\n    lineEnd: getLineEnd(children[children.length - 1]),\n    isMarker: !0\n  };\n  return {\n    type: \"element\",\n    tagName: \"div\",\n    data: marker.component ? __spreadProps$2(__spreadValues$2({}, baseData), { component: marker.component, markerProperties: options }) : baseData,\n    properties: { className },\n    children\n  };\n}\nfunction wrapLines(treeNodes, markers, options) {\n  const ast = markers.reduce(\n    (acc, marker) => unwrapLine(marker.line, acc),\n    treeNodes\n  ), wrapped = [];\n  let astIndex = 0;\n  for (let m = 0; m < markers.length; m++) {\n    const marker = markers[m];\n    for (let node = ast[astIndex]; node && getLineEnd(node) < marker.line; node = ast[++astIndex])\n      wrapped.push(node);\n    const batch = [];\n    for (let node = ast[astIndex]; node && getLineEnd(node) === marker.line; node = ast[++astIndex])\n      node.type !== \"doctype\" && batch.push(node);\n    batch.length > 0 && wrapped.push(wrapBatch(batch, marker, options));\n  }\n  for (; astIndex < ast.length; )\n    wrapped.push(ast[astIndex++]);\n  return { type: \"root\", children: wrapped };\n}\nvar __defProp$1 = Object.defineProperty, __defProps$1 = Object.defineProperties, __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors, __getOwnPropSymbols$1 = Object.getOwnPropertySymbols, __hasOwnProp$1 = Object.prototype.hasOwnProperty, __propIsEnum$1 = Object.prototype.propertyIsEnumerable, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b))\n      __propIsEnum$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  return a;\n}, __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));\nfunction mapWithDepth(depth) {\n  return function(child, i) {\n    return mapChild(child, i, depth);\n  };\n}\nfunction mapChild(child, i, depth) {\n  if (child.type === \"doctype\")\n    return null;\n  if (!(\"tagName\" in child))\n    return child.value;\n  let className = \"\";\n  typeof child.properties < \"u\" && (className = Array.isArray(child.properties.className) ? child.properties.className.join(\" \") : `${child.properties.className}`);\n  const key = `fract-${depth}-${i}`, children = child.children && child.children.map(mapWithDepth(depth + 1));\n  return isReactRefractorMarkerDataWithComponent(child.data) ? (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(\n    child.data.component,\n    __spreadProps$1(__spreadValues$1(__spreadValues$1({ key }, child.properties), child.data.markerProperties), { className }),\n    children\n  ) : (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(child.tagName, { key, className }, children);\n}\nfunction isReactRefractorMarkerDataWithComponent(data) {\n  return typeof data == \"object\" && data !== null && \"component\" in data && \"markerProperties\" in data;\n}\nvar __defProp = Object.defineProperty, __defProps = Object.defineProperties, __getOwnPropDescs = Object.getOwnPropertyDescriptors, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b))\n      __propIsEnum.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  return a;\n}, __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nconst DEFAULT_CLASSNAME = \"refractor\";\nfunction Refractor(props) {\n  const className = props.className || DEFAULT_CLASSNAME, langClassName = `language-${props.language}`, codeProps = { className: langClassName }, preClass = [className, langClassName].filter(Boolean).join(\" \");\n  if (props.inline && (codeProps.style = { display: \"inline\" }, codeProps.className = className), props.plainText) {\n    const code2 = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", __spreadProps(__spreadValues({}, codeProps), { children: props.value }));\n    return props.inline ? code2 : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\", { className: preClass, children: code2 });\n  }\n  let ast = refractor_core__WEBPACK_IMPORTED_MODULE_4__.refractor.highlight(props.value, props.language);\n  props.markers && props.markers.length > 0 && (ast = addMarkers(ast, { markers: props.markers }));\n  const value = ast.children.length === 0 ? props.value : ast.children.map(mapWithDepth(0)), code = /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", __spreadProps(__spreadValues({}, codeProps), { children: value }));\n  return props.inline ? code : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\", { className: preClass, children: code });\n}\nconst registerLanguage = (lang) => refractor_core__WEBPACK_IMPORTED_MODULE_4__.refractor.register(lang), hasLanguage = (lang) => refractor_core__WEBPACK_IMPORTED_MODULE_4__.refractor.registered(lang);\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-refractor/dist/index.js\n");

/***/ })

};
;